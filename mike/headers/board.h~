/*************************************************************************
*                    board class interface definitions
*                    Michael Grant
*                    csci265
**************************************************************************/

#ifndef BOARD_H
#define BOARD_H

#include "peice.h"
#include "player.h"
#include "globalConstants.h"


class board{
   public:
      board();
      ~board(){}

      void set_up(char player_positions[]);  // put the players peices on the board
      void winner(char);  // sends who won the game to players GUI
      void possible_moves(peice);   // indicate to the user what the possible moves are
      bool is_valid(int,int,int,int);  //  return if the move is valid or not
      void make_move(int, int, int, int);  // move a peice from on space to another according to how it behaves
      void strike(peice *&, peice *&);  // determines the winner of a strike

      void print_board();    //  print the board as it stands 
      void print_space(int r,int c);  // debugging method
   private:

      peice * space[boardSize][boardSize];
      player red, blue;
      void update_side(peice *); 
      void swap(peice *&,peice *&);
      void remove_peice(peice *);
};    

#endif
          
